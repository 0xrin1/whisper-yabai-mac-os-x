{
  "custom_commands": {
    "// Application Launchers": "Section for launching specific applications",
    "browser": "open -a 'Brave Browser'",
    "brave": "open -a 'Brave Browser'",
    "chrome": "open -a 'Google Chrome'",
    "safari": "open -a 'Safari'",
    "firefox": "open -a 'Firefox'",
    "terminal": "open -a 'Ghostty'",
    "ghostty": "open -a 'Ghostty'",
    "iterm": "open -a 'iTerm'",
    "cursor": "open -a 'Cursor'",
    "code": "open -a 'Visual Studio Code'",
    "vim": "open -a 'Ghostty' && osascript -e 'tell application \"Ghostty\" to activate'",
    "intellij": "open -a 'IntelliJ IDEA'",
    "pycharm": "open -a 'PyCharm'",
    "android studio": "open -a 'Android Studio'",
    "xcode": "open -a 'Xcode'",
    "docker": "open -a 'Docker Desktop'",
    "postman": "open -a 'Postman'",
    "figma": "open -a 'Figma'",
    
    "// Communication Apps": "Section for communication tools",
    "telegram": "open -a 'Telegram'",
    "whatsapp": "open -a 'WhatsApp'",
    "slack": "open -a 'Slack'",
    "teams": "open -a 'Microsoft Teams'",
    "zoom": "open -a 'zoom.us'",
    "messages": "open -a 'Messages'",
    "chat": "open -a 'Messages'",
    "discord": "open -a 'Discord'",
    
    "// Productivity": "Section for productivity apps",
    "notes": "open -a 'Notes'",
    "mail": "open -a 'Mail'",
    "email": "open -a 'Mail'",
    "calendar": "open -a 'Calendar'",
    "reminders": "open -a 'Reminders'",
    "music": "open -a 'Music'",
    "spotify": "open -a 'Spotify'",
    
    "// Web Resources": "Section for web resources",
    "github": "open https://github.com",
    "gitlab": "open https://gitlab.com",
    "stack overflow": "open https://stackoverflow.com",
    "google": "open https://google.com",
    "youtube": "open https://youtube.com",
    
    "// Common Hotkeys": "Section for common keyboard shortcuts",
    "save": "pyautogui.hotkey('command', 's')",
    "save as": "pyautogui.hotkey('command', 'shift', 's')",
    "undo": "pyautogui.hotkey('command', 'z')",
    "redo": "pyautogui.hotkey('command', 'shift', 'z')",
    "copy": "pyautogui.hotkey('command', 'c')",
    "paste": "pyautogui.hotkey('command', 'v')",
    "cut": "pyautogui.hotkey('command', 'x')",
    "select all": "pyautogui.hotkey('command', 'a')",
    "find": "pyautogui.hotkey('command', 'f')",
    "find next": "pyautogui.hotkey('command', 'g')",
    "find previous": "pyautogui.hotkey('command', 'shift', 'g')",
    "new file": "pyautogui.hotkey('command', 'n')",
    "new window": "pyautogui.hotkey('command', 'shift', 'n')",
    "new tab": "pyautogui.hotkey('command', 't')",
    "close tab": "pyautogui.hotkey('command', 'w')",
    "close window": "pyautogui.hotkey('command', 'shift', 'w')",
    "reload": "pyautogui.hotkey('command', 'r')",
    "hard reload": "pyautogui.hotkey('command', 'shift', 'r')",
    "quit": "pyautogui.hotkey('command', 'q')",
    "print": "pyautogui.hotkey('command', 'p')",
    "preferences": "pyautogui.hotkey('command', ',')",
    "tab right": "pyautogui.hotkey('control', 'tab')",
    "tab left": "pyautogui.hotkey('control', 'shift', 'tab')",
    "tab one": "pyautogui.hotkey('command', '1')",
    "tab two": "pyautogui.hotkey('command', '2')",
    "tab three": "pyautogui.hotkey('command', '3')",
    "tab four": "pyautogui.hotkey('command', '4')",
    "tab five": "pyautogui.hotkey('command', '5')",
    "escape": "pyautogui.press('escape')",
    "enter": "pyautogui.press('enter')",
    "return": "pyautogui.press('return')",
    
    "// Navigation": "Section for system navigation",
    "home": "pyautogui.hotkey('fn', 'left')",
    "end": "pyautogui.hotkey('fn', 'right')",
    "page up": "pyautogui.hotkey('fn', 'up')",
    "page down": "pyautogui.hotkey('fn', 'down')",
    "mission control": "pyautogui.hotkey('control', 'up')",
    "app windows": "pyautogui.hotkey('control', 'down')",
    "show desktop": "pyautogui.hotkey('fn', 'f11')",
    
    "// Window Management (Yabai)": "Section for yabai window management",
    "split vertical": "yabai -m window --split vertical",
    "split horizontal": "yabai -m window --split horizontal",
    "flip": "yabai -m space --mirror y-axis",
    "balance": "yabai -m space --balance",
    "float": "yabai -m window --toggle float",
    "full": "yabai -m window --toggle zoom-fullscreen",
    "rotate": "yabai -m space --rotate 90",
    "focus left": "yabai -m window --focus west",
    "focus right": "yabai -m window --focus east",
    "focus up": "yabai -m window --focus north",
    "focus down": "yabai -m window --focus south",
    "swap left": "yabai -m window --swap west",
    "swap right": "yabai -m window --swap east",
    "swap up": "yabai -m window --swap north",
    "swap down": "yabai -m window --swap south",
    "warp left": "yabai -m window --warp west",
    "warp right": "yabai -m window --warp east",
    "warp up": "yabai -m window --warp north",
    "warp down": "yabai -m window --warp south",
    "grow": "yabai -m window --resize right:20:0 || yabai -m window --resize left:20:0",
    "shrink": "yabai -m window --resize right:-20:0 || yabai -m window --resize left:-20:0",
    "grow height": "yabai -m window --resize bottom:0:20 || yabai -m window --resize top:0:20",
    "shrink height": "yabai -m window --resize bottom:0:-20 || yabai -m window --resize top:0:-20",
    "space one": "yabai -m space --focus 1",
    "space two": "yabai -m space --focus 2",
    "space three": "yabai -m space --focus 3",
    "space four": "yabai -m space --focus 4",
    "space five": "yabai -m space --focus 5",
    "send to space one": "yabai -m window --space 1",
    "send to space two": "yabai -m window --space 2",
    "send to space three": "yabai -m window --space 3",
    "send to space four": "yabai -m window --space 4",
    "send to space five": "yabai -m window --space 5",
    "stack": "yabai -m window --stack next",
    "unstack": "yabai -m window --stack recent",
    "next stack": "yabai -m window --focus stack.next || yabai -m window --focus stack.first",
    "previous stack": "yabai -m window --focus stack.prev || yabai -m window --focus stack.last",
    
    "// Development": "Section for development shortcuts",
    "build": "pyautogui.hotkey('command', 'b')",
    "run": "pyautogui.hotkey('command', 'r')",
    "debug": "pyautogui.hotkey('command', 'd')",
    "stop": "pyautogui.hotkey('command', 'period')",
    "test": "pyautogui.hotkey('command', 'u')",
    "refactor": "pyautogui.hotkey('control', 't')",
    "next error": "pyautogui.hotkey('f8')",
    "previous error": "pyautogui.hotkey('shift', 'f8')",
    "comment": "pyautogui.hotkey('command', '/')",
    "format code": "pyautogui.hotkey('option', 'command', 'l')",
    "toggle breakpoint": "pyautogui.hotkey('command', 'f8')",
    "step over": "pyautogui.hotkey('f8')",
    "step into": "pyautogui.hotkey('f7')",
    "step out": "pyautogui.hotkey('shift', 'f8')",
    "resume": "pyautogui.hotkey('f9')",
    
    "// Vim Commands": "Section for vim-specific commands",
    "vim save": "pyautogui.press('escape') && pyautogui.typewrite(':w') && pyautogui.press('enter')",
    "vim quit": "pyautogui.press('escape') && pyautogui.typewrite(':q') && pyautogui.press('enter')",
    "vim save and quit": "pyautogui.press('escape') && pyautogui.typewrite(':wq') && pyautogui.press('enter')",
    "vim force quit": "pyautogui.press('escape') && pyautogui.typewrite(':q!') && pyautogui.press('enter')",
    "vim insert": "pyautogui.press('i')",
    "vim normal": "pyautogui.press('escape')",
    "vim visual": "pyautogui.press('v')",
    "vim line": "pyautogui.press('shift+v')",
    "vim block": "pyautogui.hotkey('control', 'v')",
    
    "// System Controls": "Section for system controls",
    "screenshot": "pyautogui.hotkey('command', 'shift', '4')",
    "screenshot window": "pyautogui.hotkey('command', 'shift', '4') && pyautogui.hotkey('space')",
    "screencast": "pyautogui.hotkey('command', 'shift', '5')",
    "volume up": "pyautogui.press('volumeup')",
    "volume down": "pyautogui.press('volumedown')",
    "mute": "pyautogui.press('volumemute')",
    "brightness up": "pyautogui.press('brightnessup')",
    "brightness down": "pyautogui.press('brightnessdown')",
    "lock screen": "pyautogui.hotkey('control', 'command', 'q')",
    "sleep": "osascript -e 'tell application \"System Events\" to sleep'",
    "logout": "osascript -e 'tell application \"System Events\" to log out'",
    "restart": "osascript -e 'tell application \"System Events\" to restart'",
    "shutdown": "osascript -e 'tell application \"System Events\" to shut down'"
  }
}