name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Run syntax checks
      run: |
        echo "Running Python syntax checks..."
        find . -name "*.py" -not -path "./venv/*" -print0 | xargs -0 -n1 python -m py_compile
        
    - name: Run import checks
      run: |
        echo "Checking Python imports..."
        # This checks if imports can be resolved, but doesn't run the script
        find . -name "*.py" -not -path "./venv/*" -print0 | xargs -0 -n1 -I{} python -c "import ast; ast.parse(open('{}').read())"
        
    - name: Run module-specific import tests
      run: |
        echo "Testing speech synthesis module imports..."
        if [ -f "src/speech_synthesis.py" ]; then
          python -c "import sys; sys.path.append('.'); from src import speech_synthesis" || echo "Speech synthesis imports failed"
        fi
        
        echo "Testing neural voice client imports..."
        if [ -f "src/neural_voice_client.py" ]; then
          python -c "import sys; sys.path.append('.'); from src import neural_voice_client" || echo "Neural voice client imports failed"
        fi
        
        echo "Testing audio processor imports..."
        if [ -f "src/audio_processor.py" ]; then
          python -c "import sys; sys.path.append('.'); from src import audio_processor" || echo "Audio processor imports failed"
        fi
        
        echo "Testing audio recorder imports..."
        if [ -f "src/audio_recorder.py" ]; then
          python -c "import sys; sys.path.append('.'); from src import audio_recorder" || echo "Audio recorder imports failed"
        fi
        
    - name: Run code quality checks
      run: |
        echo "Checking for print statements in non-test modules..."
        find ./src -name "*.py" -not -name "test_*" -print0 | xargs -0 grep -l "print(" || echo "No print statements found"
        
        echo "Checking for TODO comments..."
        find ./src -name "*.py" -print0 | xargs -0 grep -l "TODO" || echo "No TODO comments found"
        
        echo "Checking for hardcoded file paths..."
        find ./src -name "*.py" -print0 | xargs -0 grep -l "\/Users\/" || echo "No hardcoded user paths found"
        
        echo "Checking for large files..."
        find . -type f -size +10M -not -path "./venv/*" -not -path "./models/*" | grep -v ".git/" || echo "No large files found"
        
    - name: Run neural voice tests
      run: |
        echo "Running neural voice tests..."
        python test_neural_voice.py || echo "Neural voice tests skipped (may require GPU)"
        
    - name: Run unit tests
      run: |
        echo "Running unit tests..."
        cd src
        for test_file in test_*.py; do
          if [ -f "$test_file" ]; then
            echo "Running $test_file..."
            python "$test_file" || echo "Test $test_file failed but continuing..."
          fi
        done